import java.util.Arrays;

public class Split 
{

	public static void main(String[] args) 
	{

		// show code that played with
		System.out.println(Arrays.toString("I like apples!".split(" ")));
		System.out.println(Arrays.toString("Bacon tastes really good. Bacon is amazing".split("Bacon")));
		System.out.println(Arrays.toString("I really like really like really want red apples".split("really")));
		System.out.println(Arrays.toString("I really really like bacon".split("really")));
		System.out.println(Arrays.toString("I want boba. boba makes life so much better".split("boba")));
		System.out.println(Arrays.toString("I like bacon and pancakes. I like waffles too!".split("like")));
		
		System.out.println("Real Code Below. Playing with Split Above");
		
		// make multiple tests for each thing
		System.out.println(splitBread("applespineapplesbreadlettustomatobaconmayohambreadcheese"));
		System.out.println(splitBread("breadbreadhambaconcheese"));
		System.out.println(splitBread("hambaconbreadcheese"));
		System.out.println(splitBread("hambaconbreadbreadcheesemoreham")); // prints two blanks
		System.out.println(splitBread("hambreadbaconcheesebread"));
		System.out.println(splitBread("breadhambreadbaconcheese"));
		System.out.println(splitBread("hambreadbaconbreadcheese"));
		System.out.println(splitBread("hambaconcheesebreadbread"));
		
		
		System.out.println("The second method");
		
		splitSpacesAndBread("applespineapplesbreadlettustomatobaconmayohambreadcheese");
		splitSpacesAndBread("breadbreadhambaconcheese");
		splitSpacesAndBread("hambaconbreadcheese");
		splitSpacesAndBread("hambaconbreadbreadcheesemoreham"); // prints two blanks
		splitSpacesAndBread("hambreadbaconcheesebread");
		splitSpacesAndBread("breadhambreadbaconcheese");
		splitSpacesAndBread("hambreadbaconbreadcheese");
		
	}
	
	
	//String.split();
	//It's a method that acts on a string, <StringName>.split(<String sp>);
	//Where sp is the string where the string splits
	//And it returns an array
	// Example: "I like apples!".split(" "); 
	//		it will split at spaces and return an array of ["I","like","apples!"]
	// Example 2: "I really like really red apples".split("really")
	//		it will split at the word "really" and return an array of ["I "," like "," red apples!"]
	
	//play around with String.split! what happens if you "I really really like apples".split("really") ?
		//Your task:
		/*Write a method that take in a string like "applespineapplesbreadlettustomatobaconmayohambreadcheese" 
		 * describing a sandwich use String.split to split up the sandwich by the word "bread" 
		 * and return what's in the middle of the sandwich and ignores what's on the outside
		 * What if it's a fancy sandwich with multiple pieces of bread?
		*/
	
	
	public static String splitBread(String ingredients){
		String sandwich = "";
		if(ingredients.indexOf("bread") < 0){
			System.out.println("Thats not enough bread to make a sandwich :(");
		}
		
		//removes the first bread and the ingredients before it
		String newIngredients = ingredients.substring(ingredients.indexOf("bread") + 5);
		
		//Checks to see if the new statement has enough bread to make a sandwich
		if(newIngredients.indexOf("bread") < 0){
			System.out.println("Thats not enough bread to make a sandwich :(");
		}
		
		// Array for the return of the ingredients in between the breads
		String[] breadArr = ingredients.split("bread");
		
		//prints out the ingredients if there are some before the first 
		//bread and until the bread at the end there aren't any ingredients 
		//after bread at the end
		if (ingredients.indexOf("bread") > 0 && 
				(newIngredients.lastIndexOf("bread") >= newIngredients.length() - 5)){
			for(int i = 1; i < breadArr.length; i++){
				sandwich += breadArr[i];
			}
			
		//prints out everything in between the bread at the start and end if 
		//there aren't any ingredients on the outside
		}else if(ingredients.indexOf("bread") <= 5 && 
				(ingredients.lastIndexOf("bread") >= ingredients.length() - 5)){
			for(int i = 0; i < breadArr.length; i++){
				sandwich += breadArr[i];
			}
			
		//prints the ingredients between the breads, but this is only if there are ingredients before and after
		//the pieces of bread on the outside
		}else if(ingredients.indexOf("bread") - 6 > 0 && ingredients.lastIndexOf("bread")+ 6 > 0){
			for(int i = 1; i < breadArr.length - 1; i++){
				sandwich +=breadArr[i];
			}
			
		//prints the stuff between the first bread and before the last bread and ingredients after that
		//there aren't any ingredients before the first bread and there are some after the last bread

		}else{
			for(int i = 0; i < breadArr.length-1; i++){
				sandwich +=breadArr[i];
			}
		}
		return (sandwich);
	}
	
			
		//if there is no "bread" before this start here.
		//if there is no bread after this end here
		
		//Your task pt 2:
		/*Write a method that take in a string like "apples pineapples bread lettus tomato bacon mayo ham bread cheese" 
		 * describing a sandwich use String.split to split up the sandwich at the spaces, " ", and 
		 * return what's in the middle of the sandwich and ignores what's on the outside
		 * Again, what if it's a fancy sandwich with multiple pieces of bread?
		*/
	public static void splitSpacesAndBread(String ingredients){
		//gets rid of the spaces then puts it into an array
		String[] spaceSplit = ingredients.split(" ");
		
		String sandwich = "";
		
		//inputs the array into splitBread to take out the sandwich
		sandwich = splitBread(Arrays.toString(spaceSplit));
		
		if(sandwich.charAt(0) = "["){
			sandwich = sandwich.substring(1, sandwich.length() - 1);
		}
		
	}
}

